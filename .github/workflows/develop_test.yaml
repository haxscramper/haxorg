name: Docker Develop Test

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-develop-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Cache Docker image
      uses: actions/cache@v3
      id: docker-cache
      with:
        path: /tmp/docker-image-develop
        key: docker-develop-${{ hashFiles('scripts/py_repository/develop.dockerfile') }}
        
    - name: Load cached Docker image
      if: steps.docker-cache.outputs.cache-hit == 'true'
      run: docker load -i /tmp/docker-image-develop/image.tar
      
    - name: Build Docker image
      if: steps.docker-cache.outputs.cache-hit != 'true'
      run: |
        docker build -t docker-haxorg -f scripts/py_repository/develop.dockerfile .
        mkdir -p /tmp/docker-image-develop
        docker save docker-haxorg -o /tmp/docker-image-develop/image.tar
        
    - name: Create build directory with correct permissions
      run: |
        mkdir -p /tmp/haxorg_build_dir
        sudo chown -R 1000:1000 /tmp/haxorg_build_dir
        
    - name: Run develop tests in Docker
      run: |
        docker run \
          --mount type=bind,src=${{ github.workspace }}/src,dst=/haxorg/src \
          --mount type=bind,src=${{ github.workspace }}/scripts,dst=/haxorg/scripts \
          --mount type=bind,src=${{ github.workspace }}/tests,dst=/haxorg/tests \
          --mount type=bind,src=${{ github.workspace }}/benchmark,dst=/haxorg/benchmark \
          --mount type=bind,src=${{ github.workspace }}/tasks.py,dst=/haxorg/tasks.py \
          --mount type=bind,src=${{ github.workspace }}/examples,dst=/haxorg/examples \
          --mount type=bind,src=${{ github.workspace }}/docs,dst=/haxorg/docs \
          --mount type=bind,src=${{ github.workspace }}/pyproject.toml,dst=/haxorg/pyproject.toml \
          --mount type=bind,src=${{ github.workspace }}/ignorelist.txt,dst=/haxorg/ignorelist.txt \
          --mount type=bind,src=${{ github.workspace }}/.git,dst=/haxorg/.git \
          --mount type=bind,src=${{ github.workspace }}/thirdparty,dst=/haxorg/thirdparty \
          --mount type=bind,src=${{ github.workspace }}/CMakeLists.txt,dst=/haxorg/CMakeLists.txt \
          --mount type=bind,src=${{ github.workspace }}/toolchain.cmake,dst=/haxorg/toolchain.cmake \
          --mount type=bind,src=${{ github.workspace }}/HaxorgConfig.cmake.in,dst=/haxorg/HaxorgConfig.cmake.in \
          --mount type=bind,src=/tmp/haxorg_build_dir,dst=/haxorg/build \
          --memory=32G \
          --rm \
          docker-haxorg \
          ./scripts/py_repository/poetry_with_deps.sh invoke run-develop-ci --build --test --no-docs --no-coverage --reflection --deps --install --example --emscripten-deps --emscripten-build --emscripten-test
