version: 3

tasks:
  debug:
    dir: "{{.DIR}}"
    cmds:
      - >
        lldb
        --batch
        -o "command script import {{.PWD}}/lldb_script.py"
        -o run
        --source-on-crash {{.PWD}}/lldb-script.txt
        --
        {{.IN}}
        {{.ARGS}}

  llvm_profdata:
    dir: "{{.DIR}}"
    cmds:
      # Unclutter program output, save command execution to separate file
      - llvm-profdata merge -sparse *.profraw -o coverage.profdata > profdata_output.txt
      - llvm-cov show {{.BINARY}} -instr-profile=coverage.profdata -format=html > coverage.html
      - llvm-cov export -format=lcov -instr-profile=coverage.profdata {{.BINARY}} > coverage.lcov
      - llvm-cov export -format=text -instr-profile=coverage.profdata {{.BINARY}} > coverage.json
      - genhtml -o html coverage.lcov > genhtml_output.txt
  
  tests:
    desc: "Compile and run tests"
    dir: build
    env:
      CLICOLOR_FORCE: 1
    cmds:
      # - rm -rf *
      # - cmake -DCMAKE_BUILD_TYPE=Debug -GNinja --log-level=TRACE ..
      - >
        cmake
        -DCMAKE_BUILD_TYPE=Debug
        -DUSE_SINGLE_FILE_CATCH=OFF
        -DCMAKE_CXX_COMPILER=clang++
        -DTEST_COVERAGE=ON
        --log-level=TRACE
        ..

      - make -j8
      # - ninja -v
      - "{{.PWD}}/tests.bin"
      # - task: debug
      #   vars:
      #     DIR: "{{.PWD}}/build"
      #     IN: "{{.PWD}}/tests.bin"

      - task: llvm_profdata
        vars:
          DIR: "{{.PWD}}/build"
          BINARY: "{{.PWD}}/tests.bin"

  plantuml:
    desc: "Compile and test plantuml grammar"
    cmds:
      - xmake build --verbose --warning --yes plantuml_parser
