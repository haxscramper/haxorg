void visitStmt(R& res, In<sem::Stmt> tree);
void visitInline(R& res, In<sem::Inline> tree);
void visitStmtList(R& res, In<sem::StmtList> tree);
void visitEmpty(R& res, In<sem::Empty> tree);
void visitRow(R& res, In<sem::Row> tree);
void visitTable(R& res, In<sem::Table> tree);
void visitHashTag(R& res, In<sem::HashTag> tree);
void visitFootnote(R& res, In<sem::Footnote> tree);
void visitCompletion(R& res, In<sem::Completion> tree);
void visitParagraph(R& res, In<sem::Paragraph> tree);
void visitFormat(R& res, In<sem::Format> tree);
void visitCenter(R& res, In<sem::Center> tree);
void visitCommand(R& res, In<sem::Command> tree);
void visitLineCommand(R& res, In<sem::LineCommand> tree);
void visitStandalone(R& res, In<sem::Standalone> tree);
void visitAttached(R& res, In<sem::Attached> tree);
void visitCaption(R& res, In<sem::Caption> tree);
void visitCommandGroup(R& res, In<sem::CommandGroup> tree);
void visitBlock(R& res, In<sem::Block> tree);
void visitQuote(R& res, In<sem::Quote> tree);
void visitExample(R& res, In<sem::Example> tree);
void visitExport(R& res, In<sem::Export> tree);
void visitAdmonitionBlock(R& res, In<sem::AdmonitionBlock> tree);
void visitCode(R& res, In<sem::Code> tree);
void visit(R& res, CR<sem::Code::Switch::Data> object);
void visit(R& res, CR<sem::Code::Switch> object);
void visit(R& res, CR<sem::Code::Switch::LineStart> object);
void visit(R& res, CR<sem::Code::Switch::CalloutFormat> object);
void visit(R& res, CR<sem::Code::Switch::RemoveCallout> object);
void visit(R& res, CR<sem::Code::Switch::EmphasizeLine> object);
void visit(R& res, CR<sem::Code::Switch::Dedent> object);
void visit(R& res, CR<sem::Time::TimeVariant> object);
void visitTime(R& res, In<sem::Time> tree);
void visit(R& res, CR<sem::Time::Repeat> object);
void visit(R& res, CR<sem::Time::Static> object);
void visit(R& res, CR<sem::Time::Dynamic> object);
void visitTimeRange(R& res, In<sem::TimeRange> tree);
void visitMacro(R& res, In<sem::Macro> tree);
void visitSymbol(R& res, In<sem::Symbol> tree);
void visit(R& res, CR<sem::Symbol::Param> object);
void visit(R& res, CR<sem::SubtreeLog::LogEntry> object);
void visitSubtreeLog(R& res, In<sem::SubtreeLog> tree);
void visit(R& res, CR<sem::SubtreeLog::DescribedLog> object);
void visit(R& res, CR<sem::SubtreeLog::Note> object);
void visit(R& res, CR<sem::SubtreeLog::Refile> object);
void visit(R& res, CR<sem::SubtreeLog::Clock> object);
void visit(R& res, CR<sem::SubtreeLog::State> object);
void visit(R& res, CR<sem::SubtreeLog::Tag> object);
void visitSubtree(R& res, In<sem::Subtree> tree);
void visit(R& res, CR<sem::Subtree::Period> object);
void visit(R& res, CR<sem::Subtree::Property::Data> object);
void visit(R& res, CR<sem::Subtree::Property> object);
void visit(R& res, CR<sem::Subtree::Property::Nonblocking> object);
void visit(R& res, CR<sem::Subtree::Property::Trigger> object);
void visit(R& res, CR<sem::Subtree::Property::Origin> object);
void visit(R& res, CR<sem::Subtree::Property::ExportLatexClass> object);
void visit(R& res, CR<sem::Subtree::Property::ExportLatexHeader> object);
void visit(R& res, CR<sem::Subtree::Property::ExportLatexCompiler> object);
void visit(R& res, CR<sem::Subtree::Property::Ordered> object);
void visit(R& res, CR<sem::Subtree::Property::Effort> object);
void visit(R& res, CR<sem::Subtree::Property::Visibility> object);
void visit(R& res, CR<sem::Subtree::Property::ExportOptions> object);
void visit(R& res, CR<sem::Subtree::Property::Blocker> object);
void visit(R& res, CR<sem::Subtree::Property::Unnumbered> object);
void visit(R& res, CR<sem::Subtree::Property::Created> object);
void visitLatexBody(R& res, In<sem::LatexBody> tree);
void visitInlineMath(R& res, In<sem::InlineMath> tree);
void visitLeaf(R& res, In<sem::Leaf> tree);
void visitEscaped(R& res, In<sem::Escaped> tree);
void visitNewline(R& res, In<sem::Newline> tree);
void visitSpace(R& res, In<sem::Space> tree);
void visitWord(R& res, In<sem::Word> tree);
void visitAtMention(R& res, In<sem::AtMention> tree);
void visitRawText(R& res, In<sem::RawText> tree);
void visitPunctuation(R& res, In<sem::Punctuation> tree);
void visitPlaceholder(R& res, In<sem::Placeholder> tree);
void visitBigIdent(R& res, In<sem::BigIdent> tree);
void visitMarkup(R& res, In<sem::Markup> tree);
void visitBold(R& res, In<sem::Bold> tree);
void visitUnderline(R& res, In<sem::Underline> tree);
void visitMonospace(R& res, In<sem::Monospace> tree);
void visitMarkQuote(R& res, In<sem::MarkQuote> tree);
void visitVerbatim(R& res, In<sem::Verbatim> tree);
void visitItalic(R& res, In<sem::Italic> tree);
void visitStrike(R& res, In<sem::Strike> tree);
void visitPar(R& res, In<sem::Par> tree);
void visitList(R& res, In<sem::List> tree);
void visitListItem(R& res, In<sem::ListItem> tree);
void visit(R& res, CR<sem::Link::Data> object);
void visitLink(R& res, In<sem::Link> tree);
void visit(R& res, CR<sem::Link::Raw> object);
void visit(R& res, CR<sem::Link::Id> object);
void visit(R& res, CR<sem::Link::Person> object);
void visit(R& res, CR<sem::Link::Footnote> object);
void visit(R& res, CR<sem::Link::File> object);
void visitDocument(R& res, In<sem::Document> tree);
void visitParseError(R& res, In<sem::ParseError> tree);
void visitFileTarget(R& res, In<sem::FileTarget> tree);
void visitTextSeparator(R& res, In<sem::TextSeparator> tree);
void visit(R& res, CR<sem::Include::Data> object);
void visitInclude(R& res, In<sem::Include> tree);
void visit(R& res, CR<sem::Include::Example> object);
void visit(R& res, CR<sem::Include::Export> object);
void visit(R& res, CR<sem::Include::Src> object);
void visit(R& res, CR<sem::Include::OrgDocument> object);
void visitDocumentOptions(R& res, In<sem::DocumentOptions> tree);
void visitDocumentGroup(R& res, In<sem::DocumentGroup> tree);