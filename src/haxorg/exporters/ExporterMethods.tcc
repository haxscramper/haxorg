/* clang-format off */
void visitNone(R& res, In<sem::None> object);
void visitCmdArgument(R& res, In<sem::CmdArgument> object);
void visitCmdArgumentList(R& res, In<sem::CmdArgumentList> object);
void visitCmdArguments(R& res, In<sem::CmdArguments> object);
void visitErrorItem(R& res, In<sem::ErrorItem> object);
void visitErrorGroup(R& res, In<sem::ErrorGroup> object);
void visitStmt(R& res, In<sem::Stmt> object);
void visitInline(R& res, In<sem::Inline> object);
void visitStmtList(R& res, In<sem::StmtList> object);
void visitEmpty(R& res, In<sem::Empty> object);
void visitCmd(R& res, In<sem::Cmd> object);
void visitBlock(R& res, In<sem::Block> object);
void visitLineCommand(R& res, In<sem::LineCommand> object);
void visitAttached(R& res, In<sem::Attached> object);
void visitLeaf(R& res, In<sem::Leaf> object);
void visitCmdCaption(R& res, In<sem::CmdCaption> object);
void visitCmdName(R& res, In<sem::CmdName> object);
void visitCmdCustomArgs(R& res, In<sem::CmdCustomArgs> object);
void visitCmdCustomRaw(R& res, In<sem::CmdCustomRaw> object);
void visitCmdCustomText(R& res, In<sem::CmdCustomText> object);
void visitCmdResults(R& res, In<sem::CmdResults> object);
void visitCmdTblfm(R& res, In<sem::CmdTblfm> object);
void visitHashTag(R& res, In<sem::HashTag> object);
void visitFootnote(R& res, In<sem::Footnote> object);
void visit(R& res, sem::Time::TimeVariant const& object);
void visitTime(R& res, In<sem::Time> object);
void visit(R& res, sem::Time::Repeat const& object);
void visit(R& res, sem::Time::Static const& object);
void visit(R& res, sem::Time::Dynamic const& object);
void visitTimeRange(R& res, In<sem::TimeRange> object);
void visitMacro(R& res, In<sem::Macro> object);
void visitSymbol(R& res, In<sem::Symbol> object);
void visit(R& res, sem::Symbol::Param const& object);
void visitEscaped(R& res, In<sem::Escaped> object);
void visitNewline(R& res, In<sem::Newline> object);
void visitSpace(R& res, In<sem::Space> object);
void visitWord(R& res, In<sem::Word> object);
void visitAtMention(R& res, In<sem::AtMention> object);
void visitRawText(R& res, In<sem::RawText> object);
void visitPunctuation(R& res, In<sem::Punctuation> object);
void visitPlaceholder(R& res, In<sem::Placeholder> object);
void visitBigIdent(R& res, In<sem::BigIdent> object);
void visitRadioTarget(R& res, In<sem::RadioTarget> object);
void visitTextTarget(R& res, In<sem::TextTarget> object);
void visitMarkup(R& res, In<sem::Markup> object);
void visitBold(R& res, In<sem::Bold> object);
void visitUnderline(R& res, In<sem::Underline> object);
void visitMonospace(R& res, In<sem::Monospace> object);
void visitMarkQuote(R& res, In<sem::MarkQuote> object);
void visitVerbatim(R& res, In<sem::Verbatim> object);
void visitItalic(R& res, In<sem::Italic> object);
void visitStrike(R& res, In<sem::Strike> object);
void visitPar(R& res, In<sem::Par> object);
void visitLatex(R& res, In<sem::Latex> object);
void visit(R& res, sem::Link::Data const& object);
void visitLink(R& res, In<sem::Link> object);
void visit(R& res, sem::Link::Raw const& object);
void visit(R& res, sem::Link::Id const& object);
void visit(R& res, sem::Link::Person const& object);
void visit(R& res, sem::Link::UserProtocol const& object);
void visit(R& res, sem::Link::Internal const& object);
void visit(R& res, sem::Link::Footnote const& object);
void visit(R& res, sem::Link::File const& object);
void visit(R& res, sem::Link::Attachment const& object);
void visitBlockCenter(R& res, In<sem::BlockCenter> object);
void visitBlockQuote(R& res, In<sem::BlockQuote> object);
void visitBlockComment(R& res, In<sem::BlockComment> object);
void visitBlockVerse(R& res, In<sem::BlockVerse> object);
void visitBlockExample(R& res, In<sem::BlockExample> object);
void visitBlockExport(R& res, In<sem::BlockExport> object);
void visitBlockAdmonition(R& res, In<sem::BlockAdmonition> object);
void visitBlockCode(R& res, In<sem::BlockCode> object);
void visit(R& res, sem::BlockCode::Line const& object);
void visit(R& res, sem::BlockCode::Line::Part::Data const& object);
void visit(R& res, sem::BlockCode::Line::Part const& object);
void visit(R& res, sem::BlockCode::Line::Part::Raw const& object);
void visit(R& res, sem::BlockCode::Line::Part::Callout const& object);
void visit(R& res, sem::BlockCode::Line::Part::Tangle const& object);
void visit(R& res, sem::BlockCode::Switch::Data const& object);
void visit(R& res, sem::BlockCode::Switch const& object);
void visit(R& res, sem::BlockCode::Switch::LineStart const& object);
void visit(R& res, sem::BlockCode::Switch::CalloutFormat const& object);
void visit(R& res, sem::BlockCode::Switch::RemoveCallout const& object);
void visit(R& res, sem::BlockCode::Switch::EmphasizeLine const& object);
void visit(R& res, sem::BlockCode::Switch::Dedent const& object);
void visit(R& res, sem::BlockCode::EvalResult::Data const& object);
void visit(R& res, sem::BlockCode::EvalResult const& object);
void visit(R& res, sem::BlockCode::EvalResult::None const& object);
void visit(R& res, sem::BlockCode::EvalResult::OrgValue const& object);
void visit(R& res, sem::BlockCode::EvalResult::File const& object);
void visit(R& res, sem::BlockCode::EvalResult::Raw const& object);
void visit(R& res, sem::SubtreeLog::LogEntry const& object);
void visitSubtreeLog(R& res, In<sem::SubtreeLog> object);
void visit(R& res, sem::SubtreeLog::DescribedLog const& object);
void visit(R& res, sem::SubtreeLog::Priority const& object);
void visit(R& res, sem::SubtreeLog::Note const& object);
void visit(R& res, sem::SubtreeLog::Refile const& object);
void visit(R& res, sem::SubtreeLog::Clock const& object);
void visit(R& res, sem::SubtreeLog::State const& object);
void visit(R& res, sem::SubtreeLog::Tag const& object);
void visit(R& res, sem::SubtreeLog::Unknown const& object);
void visitSubtree(R& res, In<sem::Subtree> object);
void visit(R& res, sem::Subtree::Period const& object);
void visit(R& res, sem::Subtree::Property::Data const& object);
void visit(R& res, sem::Subtree::Property const& object);
void visit(R& res, sem::Subtree::Property::Nonblocking const& object);
void visit(R& res, sem::Subtree::Property::Trigger const& object);
void visit(R& res, sem::Subtree::Property::Origin const& object);
void visit(R& res, sem::Subtree::Property::ExportLatexClass const& object);
void visit(R& res, sem::Subtree::Property::ExportLatexClassOptions const& object);
void visit(R& res, sem::Subtree::Property::ExportLatexHeader const& object);
void visit(R& res, sem::Subtree::Property::ExportLatexCompiler const& object);
void visit(R& res, sem::Subtree::Property::Ordered const& object);
void visit(R& res, sem::Subtree::Property::Effort const& object);
void visit(R& res, sem::Subtree::Property::Visibility const& object);
void visit(R& res, sem::Subtree::Property::ExportOptions const& object);
void visit(R& res, sem::Subtree::Property::Blocker const& object);
void visit(R& res, sem::Subtree::Property::Unnumbered const& object);
void visit(R& res, sem::Subtree::Property::Created const& object);
void visit(R& res, sem::Subtree::Property::CustomArgs const& object);
void visit(R& res, sem::Subtree::Property::CustomRaw const& object);
void visitSubtreeCompletion(R& res, In<sem::SubtreeCompletion> object);
void visitCell(R& res, In<sem::Cell> object);
void visitRow(R& res, In<sem::Row> object);
void visitTable(R& res, In<sem::Table> object);
void visitParagraph(R& res, In<sem::Paragraph> object);
void visit(R& res, sem::AnnotatedParagraph::Data const& object);
void visitAnnotatedParagraph(R& res, In<sem::AnnotatedParagraph> object);
void visit(R& res, sem::AnnotatedParagraph::None const& object);
void visit(R& res, sem::AnnotatedParagraph::Footnote const& object);
void visit(R& res, sem::AnnotatedParagraph::Admonition const& object);
void visit(R& res, sem::AnnotatedParagraph::Timestamp const& object);
void visitColonExample(R& res, In<sem::ColonExample> object);
void visitCmdAttr(R& res, In<sem::CmdAttr> object);
void visitCall(R& res, In<sem::Call> object);
void visitList(R& res, In<sem::List> object);
void visitListItem(R& res, In<sem::ListItem> object);
void visitDocumentOptions(R& res, In<sem::DocumentOptions> object);
void visit(R& res, sem::DocumentOptions::ExportConfig::TocExport const& object);
void visit(R& res, sem::DocumentOptions::ExportConfig const& object);
void visit(R& res, sem::DocumentOptions::ExportConfig::TaskExport const& object);
void visit(R& res, sem::DocumentOptions::ExportConfig::DoExport const& object);
void visit(R& res, sem::DocumentOptions::ExportConfig::ExportFixed const& object);
void visitDocument(R& res, In<sem::Document> object);
void visitFileTarget(R& res, In<sem::FileTarget> object);
void visitTextSeparator(R& res, In<sem::TextSeparator> object);
void visit(R& res, sem::Include::Data const& object);
void visitInclude(R& res, In<sem::Include> object);
void visit(R& res, sem::Include::Example const& object);
void visit(R& res, sem::Include::Export const& object);
void visit(R& res, sem::Include::Src const& object);
void visit(R& res, sem::Include::OrgDocument const& object);
void visitDocumentGroup(R& res, In<sem::DocumentGroup> object);
/* clang-format on */