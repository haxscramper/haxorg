/* clang-format off */
syntax = "proto3";
package orgproto;
import "SemOrgProtoManual.proto";
enum OrgSpecName {
  OrgSpecName_Unnamed_f                                                             = 0;
  OrgSpecName_Result_f                                                              = 1;
  OrgSpecName_Year_f                                                                = 2;
  OrgSpecName_Day_f                                                                 = 3;
  OrgSpecName_Clock_f                                                               = 4;
  OrgSpecName_Repeater_f                                                            = 5;
  OrgSpecName_Zone_f                                                                = 6;
  OrgSpecName_Link_f                                                                = 7;
  OrgSpecName_Tags_f                                                                = 8;
  OrgSpecName_Tag_f                                                                 = 9;
  OrgSpecName_State_f                                                               = 10;
  OrgSpecName_Protocol_f                                                            = 11;
  OrgSpecName_Desc_f                                                                = 12;
  OrgSpecName_Times_f                                                               = 13;
  OrgSpecName_Drawer_f                                                              = 14;
  OrgSpecName_Args_f                                                                = 15;
  OrgSpecName_Name_f                                                                = 16;
  OrgSpecName_Definition_f                                                          = 17;
  OrgSpecName_Body_f                                                                = 18;
  OrgSpecName_HeaderArgs_f                                                          = 19;
  OrgSpecName_File_f                                                                = 20;
  OrgSpecName_Kind_f                                                                = 21;
  OrgSpecName_Lang_f                                                                = 22;
  OrgSpecName_Prefix_f                                                              = 23;
  OrgSpecName_Text_f                                                                = 24;
  OrgSpecName_Todo_f                                                                = 25;
  OrgSpecName_Urgency_f                                                             = 26;
  OrgSpecName_Title_f                                                               = 27;
  OrgSpecName_Completion_f                                                          = 28;
  OrgSpecName_Head_f                                                                = 29;
  OrgSpecName_Subnodes_f                                                            = 30;
  OrgSpecName_Properties_f                                                          = 31;
  OrgSpecName_Logbook_f                                                             = 32;
  OrgSpecName_Description_f                                                         = 33;
  OrgSpecName_Logs_f                                                                = 34;
  OrgSpecName_Newstate_f                                                            = 35;
  OrgSpecName_Oldstate_f                                                            = 36;
  OrgSpecName_Time_f                                                                = 37;
  OrgSpecName_From_f                                                                = 38;
  OrgSpecName_EndArgs_f                                                             = 39;
  OrgSpecName_Flags_f                                                               = 40;
  OrgSpecName_Value_f                                                               = 41;
  OrgSpecName_Assoc_f                                                               = 42;
  OrgSpecName_Main_f                                                                = 43;
  OrgSpecName_Hash_f                                                                = 44;
  OrgSpecName_Bullet_f                                                              = 45;
  OrgSpecName_Counter_f                                                             = 46;
  OrgSpecName_Checkbox_f                                                            = 47;
  OrgSpecName_Header_f                                                              = 48;
  OrgSpecName_To_f                                                                  = 49;
  OrgSpecName_Diff_f                                                                = 50;
  OrgSpecName_Property_f                                                            = 51;
  OrgSpecName_Subname_f                                                             = 52;
  OrgSpecName_Values_f                                                              = 53;
  OrgSpecName_Cells_f                                                               = 54;
  OrgSpecName_Rows_f                                                                = 55;
  OrgSpecName_Lines_f                                                               = 56;
  OrgSpecName_Chunks_f                                                              = 57;
  OrgSpecName_InheritanceMode_f                                                     = 58;
  OrgSpecName_MainSetRule_f                                                         = 59;
  OrgSpecName_SubSetRule_f                                                          = 60;
}

enum OrgNodeKind {
  OrgNodeKind_None_f                                                                = 0;
  OrgNodeKind_Document_f                                                            = 1;
  OrgNodeKind_UserNode_f                                                            = 2;
  OrgNodeKind_Empty_f                                                               = 3;
  OrgNodeKind_Error_f                                                               = 4;
  OrgNodeKind_ErrorTerminator_f                                                     = 5;
  OrgNodeKind_ErrorToken_f                                                          = 6;
  OrgNodeKind_InlineStmtList_f                                                      = 7;
  OrgNodeKind_StmtList_f                                                            = 8;
  OrgNodeKind_AssocStmtList_f                                                       = 9;
  OrgNodeKind_Subtree_f                                                             = 10;
  OrgNodeKind_SubtreeTimes_f                                                        = 11;
  OrgNodeKind_SubtreeStars_f                                                        = 12;
  OrgNodeKind_Completion_f                                                          = 13;
  OrgNodeKind_Checkbox_f                                                            = 14;
  OrgNodeKind_List_f                                                                = 15;
  OrgNodeKind_Bullet_f                                                              = 16;
  OrgNodeKind_ListItem_f                                                            = 17;
  OrgNodeKind_ListTag_f                                                             = 18;
  OrgNodeKind_Counter_f                                                             = 19;
  OrgNodeKind_Comment_f                                                             = 20;
  OrgNodeKind_RawText_f                                                             = 21;
  OrgNodeKind_Unparsed_f                                                            = 22;
  OrgNodeKind_Command_f                                                             = 23;
  OrgNodeKind_CommandArguments_f                                                    = 24;
  OrgNodeKind_CommandTitle_f                                                        = 25;
  OrgNodeKind_CommandAuthor_f                                                       = 26;
  OrgNodeKind_CommandCreator_f                                                      = 27;
  OrgNodeKind_CommandInclude_f                                                      = 28;
  OrgNodeKind_CommandLanguage_f                                                     = 29;
  OrgNodeKind_CommandAttr_f                                                         = 30;
  OrgNodeKind_CommandStartup_f                                                      = 31;
  OrgNodeKind_CommandName_f                                                         = 32;
  OrgNodeKind_CommandResults_f                                                      = 33;
  OrgNodeKind_CommandHeader_f                                                       = 34;
  OrgNodeKind_CommandOptions_f                                                      = 35;
  OrgNodeKind_CommandTblfm_f                                                        = 36;
  OrgNodeKind_CommandBackendOptions_f                                               = 37;
  OrgNodeKind_AttrImg_f                                                             = 38;
  OrgNodeKind_CommandCaption_f                                                      = 39;
  OrgNodeKind_File_f                                                                = 40;
  OrgNodeKind_BlockExport_f                                                         = 41;
  OrgNodeKind_InlineExport_f                                                        = 42;
  OrgNodeKind_MultilineCommand_f                                                    = 43;
  OrgNodeKind_Result_f                                                              = 44;
  OrgNodeKind_Ident_f                                                               = 45;
  OrgNodeKind_BareIdent_f                                                           = 46;
  OrgNodeKind_AdmonitionTag_f                                                       = 47;
  OrgNodeKind_BigIdent_f                                                            = 48;
  OrgNodeKind_VerbatimMultilineBlock_f                                              = 49;
  OrgNodeKind_CodeLine_f                                                            = 50;
  OrgNodeKind_CodeText_f                                                            = 51;
  OrgNodeKind_CodeTangle_f                                                          = 52;
  OrgNodeKind_CodeCallout_f                                                         = 53;
  OrgNodeKind_QuoteBlock_f                                                          = 54;
  OrgNodeKind_AdmonitionBlock_f                                                     = 55;
  OrgNodeKind_CenterBlock_f                                                         = 56;
  OrgNodeKind_VerseBlock_f                                                          = 57;
  OrgNodeKind_Example_f                                                             = 58;
  OrgNodeKind_SrcCode_f                                                             = 59;
  OrgNodeKind_SrcInlineCode_f                                                       = 60;
  OrgNodeKind_InlineCallCode_f                                                      = 61;
  OrgNodeKind_CmdCallCode_f                                                         = 62;
  OrgNodeKind_PassCode_f                                                            = 63;
  OrgNodeKind_CmdArguments_f                                                        = 64;
  OrgNodeKind_CmdFlag_f                                                             = 65;
  OrgNodeKind_CmdKey_f                                                              = 66;
  OrgNodeKind_CmdValue_f                                                            = 67;
  OrgNodeKind_CmdNamedValue_f                                                       = 68;
  OrgNodeKind_UrgencyStatus_f                                                       = 69;
  OrgNodeKind_TextSeparator_f                                                       = 70;
  OrgNodeKind_Paragraph_f                                                           = 71;
  OrgNodeKind_AnnotatedParagraph_f                                                  = 72;
  OrgNodeKind_Bold_f                                                                = 73;
  OrgNodeKind_Italic_f                                                              = 74;
  OrgNodeKind_Verbatim_f                                                            = 75;
  OrgNodeKind_Backtick_f                                                            = 76;
  OrgNodeKind_Underline_f                                                           = 77;
  OrgNodeKind_Strike_f                                                              = 78;
  OrgNodeKind_Quote_f                                                               = 79;
  OrgNodeKind_Angle_f                                                               = 80;
  OrgNodeKind_Monospace_f                                                           = 81;
  OrgNodeKind_Par_f                                                                 = 82;
  OrgNodeKind_InlineMath_f                                                          = 83;
  OrgNodeKind_DisplayMath_f                                                         = 84;
  OrgNodeKind_Space_f                                                               = 85;
  OrgNodeKind_Punctuation_f                                                         = 86;
  OrgNodeKind_Colon_f                                                               = 87;
  OrgNodeKind_Word_f                                                                = 88;
  OrgNodeKind_Escaped_f                                                             = 89;
  OrgNodeKind_Newline_f                                                             = 90;
  OrgNodeKind_RawLink_f                                                             = 91;
  OrgNodeKind_Link_f                                                                = 92;
  OrgNodeKind_Macro_f                                                               = 93;
  OrgNodeKind_BackendRaw_f                                                          = 94;
  OrgNodeKind_Symbol_f                                                              = 95;
  OrgNodeKind_TimeAssoc_f                                                           = 96;
  OrgNodeKind_StaticActiveTime_f                                                    = 97;
  OrgNodeKind_StaticInactiveTime_f                                                  = 98;
  OrgNodeKind_DynamicActiveTime_f                                                   = 99;
  OrgNodeKind_DynamicInactiveTime_f                                                 = 100;
  OrgNodeKind_TimeRange_f                                                           = 101;
  OrgNodeKind_SimpleTime_f                                                          = 102;
  OrgNodeKind_Details_f                                                             = 103;
  OrgNodeKind_Summary_f                                                             = 104;
  OrgNodeKind_Table_f                                                               = 105;
  OrgNodeKind_TableRow_f                                                            = 106;
  OrgNodeKind_TableCell_f                                                           = 107;
  OrgNodeKind_InlineFootnote_f                                                      = 108;
  OrgNodeKind_Footnote_f                                                            = 109;
  OrgNodeKind_Horizontal_f                                                          = 110;
  OrgNodeKind_Filetags_f                                                            = 111;
  OrgNodeKind_OrgTag_f                                                              = 112;
  OrgNodeKind_HashTag_f                                                             = 113;
  OrgNodeKind_MetaSymbol_f                                                          = 114;
  OrgNodeKind_AtMention_f                                                           = 115;
  OrgNodeKind_BracTag_f                                                             = 116;
  OrgNodeKind_Drawer_f                                                              = 117;
  OrgNodeKind_LatexClass_f                                                          = 118;
  OrgNodeKind_LatexHeader_f                                                         = 119;
  OrgNodeKind_LatexCompiler_f                                                       = 120;
  OrgNodeKind_LatexClassOptions_f                                                   = 121;
  OrgNodeKind_HtmlHead_f                                                            = 122;
  OrgNodeKind_Columns_f                                                             = 123;
  OrgNodeKind_CmdPropertyArgs_f                                                     = 124;
  OrgNodeKind_CmdPropertyText_f                                                     = 125;
  OrgNodeKind_CmdPropertyRaw_f                                                      = 126;
  OrgNodeKind_PropertyList_f                                                        = 127;
  OrgNodeKind_Property_f                                                            = 128;
  OrgNodeKind_Placeholder_f                                                         = 129;
  OrgNodeKind_SubtreeDescription_f                                                  = 130;
  OrgNodeKind_SubtreeUrgency_f                                                      = 131;
  OrgNodeKind_Logbook_f                                                             = 132;
  OrgNodeKind_LogbookStateChange_f                                                  = 133;
  OrgNodeKind_RadioTarget_f                                                         = 134;
  OrgNodeKind_Target_f                                                              = 135;
}

enum OrgSemKind {
  OrgSemKind_StmtList_f                                                             = 0;
  OrgSemKind_Empty_f                                                                = 1;
  OrgSemKind_Cell_f                                                                 = 2;
  OrgSemKind_Row_f                                                                  = 3;
  OrgSemKind_Table_f                                                                = 4;
  OrgSemKind_HashTag_f                                                              = 5;
  OrgSemKind_Footnote_f                                                             = 6;
  OrgSemKind_Completion_f                                                           = 7;
  OrgSemKind_Paragraph_f                                                            = 8;
  OrgSemKind_AnnotatedParagraph_f                                                   = 9;
  OrgSemKind_Center_f                                                               = 10;
  OrgSemKind_Caption_f                                                              = 11;
  OrgSemKind_CmdName_f                                                              = 12;
  OrgSemKind_CmdResults_f                                                           = 13;
  OrgSemKind_CommandGroup_f                                                         = 14;
  OrgSemKind_Tblfm_f                                                                = 15;
  OrgSemKind_Quote_f                                                                = 16;
  OrgSemKind_Verse_f                                                                = 17;
  OrgSemKind_Example_f                                                              = 18;
  OrgSemKind_CmdArguments_f                                                         = 19;
  OrgSemKind_CmdAttr_f                                                              = 20;
  OrgSemKind_CmdArgument_f                                                          = 21;
  OrgSemKind_Export_f                                                               = 22;
  OrgSemKind_AdmonitionBlock_f                                                      = 23;
  OrgSemKind_Call_f                                                                 = 24;
  OrgSemKind_Code_f                                                                 = 25;
  OrgSemKind_Time_f                                                                 = 26;
  OrgSemKind_TimeRange_f                                                            = 27;
  OrgSemKind_Macro_f                                                                = 28;
  OrgSemKind_Symbol_f                                                               = 29;
  OrgSemKind_SubtreeLog_f                                                           = 30;
  OrgSemKind_Subtree_f                                                              = 31;
  OrgSemKind_InlineMath_f                                                           = 32;
  OrgSemKind_Escaped_f                                                              = 33;
  OrgSemKind_Newline_f                                                              = 34;
  OrgSemKind_Space_f                                                                = 35;
  OrgSemKind_Word_f                                                                 = 36;
  OrgSemKind_AtMention_f                                                            = 37;
  OrgSemKind_RawText_f                                                              = 38;
  OrgSemKind_Punctuation_f                                                          = 39;
  OrgSemKind_Placeholder_f                                                          = 40;
  OrgSemKind_BigIdent_f                                                             = 41;
  OrgSemKind_Bold_f                                                                 = 42;
  OrgSemKind_Underline_f                                                            = 43;
  OrgSemKind_Monospace_f                                                            = 44;
  OrgSemKind_MarkQuote_f                                                            = 45;
  OrgSemKind_Verbatim_f                                                             = 46;
  OrgSemKind_Italic_f                                                               = 47;
  OrgSemKind_Strike_f                                                               = 48;
  OrgSemKind_Par_f                                                                  = 49;
  OrgSemKind_List_f                                                                 = 50;
  OrgSemKind_ListItem_f                                                             = 51;
  OrgSemKind_Link_f                                                                 = 52;
  OrgSemKind_DocumentOptions_f                                                      = 53;
  OrgSemKind_Document_f                                                             = 54;
  OrgSemKind_ParseError_f                                                           = 55;
  OrgSemKind_FileTarget_f                                                           = 56;
  OrgSemKind_TextSeparator_f                                                        = 57;
  OrgSemKind_Include_f                                                              = 58;
  OrgSemKind_DocumentGroup_f                                                        = 59;
}

message Stmt {
  repeated AnyNode                                 subnodes                         = 1;
  repeated AnyNode                                 attached                         = 2;
  string                                           debug                            = 1000;
}

message Inline {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message StmtList {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Empty {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Cell {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Row {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  repeated Cell                                    cells                            = 4;
  string                                           debug                            = 1000;
}

message Table {
  repeated AnyNode                                 attached                         = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  repeated Row                                     rows                             = 5;
  string                                           debug                            = 1000;
}

message HashTag {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           head                             = 4;
  repeated HashTag                                 subtags                          = 5;
  string                                           debug                            = 1000;
}

message Footnote {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           tag                              = 4;
  optional AnyNode                                 definition                       = 5;
  string                                           debug                            = 1000;
}

message Completion {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  int32                                            done                             = 4;
  int32                                            full                             = 5;
  bool                                             isPercent                        = 6;
  string                                           debug                            = 1000;
}

message Paragraph {
  repeated AnyNode                                 attached                         = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message AnnotatedParagraph {
  message None {
    string                                         debug                            = 1000;
  }
  message Footnote {
    string                                         name                             = 1;
    string                                         debug                            = 1000;
  }
  message Admonition {
    BigIdent                                       name                             = 1;
    string                                         debug                            = 1000;
  }
  message Timestamp {
    Time                                           time                             = 1;
    string                                         debug                            = 1000;
  }
  message Data {
    oneof kind {
      AnnotatedParagraph.None                      none                             = 1;
      AnnotatedParagraph.Footnote                  footnote                         = 2;
      AnnotatedParagraph.Admonition                admonition                       = 3;
      AnnotatedParagraph.Timestamp                 timestamp                        = 4;
    }
  }
  enum AnnotationKind {
    AnnotationKind_None_f                                                           = 0;
    AnnotationKind_Footnote_f                                                       = 1;
    AnnotationKind_Admonition_f                                                     = 2;
    AnnotationKind_Timestamp_f                                                      = 3;
  }
  repeated AnyNode                                 attached                         = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  AnnotatedParagraph.Data                          data                             = 5;
  string                                           debug                            = 1000;
}

message Format {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message Center {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Command {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message LineCommand {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message Standalone {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message Attached {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message Caption {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  Paragraph                                        text                             = 4;
  string                                           debug                            = 1000;
}

message CmdName {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message CmdResults {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message CommandGroup {
  repeated AnyNode                                 attached                         = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Block {
  repeated AnyNode                                 subnodes                         = 1;
  optional CmdArguments                            parameters                       = 2;
  string                                           debug                            = 1000;
}

message Tblfm {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Quote {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Verse {
  optional CmdArguments                            parameters                       = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Example {
  optional CmdArguments                            parameters                       = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message CmdArguments {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  repeated CmdArgument                             positional                       = 4;
  map<string, CmdArgument>                         named                            = 5;
  string                                           debug                            = 1000;
}

message CmdAttr {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           target                           = 4;
  CmdArguments                                     parameters                       = 5;
  string                                           debug                            = 1000;
}

message CmdArgument {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  optional string                                  key                              = 4;
  string                                           value                            = 5;
  string                                           debug                            = 1000;
}

message Export {
  enum Format {
    Format_Inline_f                                                                 = 0;
    Format_Line_f                                                                   = 1;
    Format_Block_f                                                                  = 2;
  }
  optional CmdArguments                            parameters                       = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  Export.Format                                    format                           = 5;
  string                                           exporter                         = 6;
  optional string                                  placement                        = 7;
  string                                           content                          = 8;
  string                                           debug                            = 1000;
}

message AdmonitionBlock {
  optional CmdArguments                            parameters                       = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Call {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  optional string                                  name                             = 4;
  string                                           debug                            = 1000;
}

message Code {
  message Line {
    message Part {
      message Raw {
        string                                     code                             = 1;
        string                                     debug                            = 1000;
      }
      message Callout {
        string                                     name                             = 1;
        string                                     debug                            = 1000;
      }
      message Tangle {
        string                                     target                           = 1;
        string                                     debug                            = 1000;
      }
      message Data {
        oneof kind {
          Code.Line.Part.Raw                       raw                              = 1;
          Code.Line.Part.Callout                   callout                          = 2;
          Code.Line.Part.Tangle                    tangle                           = 3;
        }
      }
      enum Kind {
        Kind_Raw_f                                                                  = 0;
        Kind_Callout_f                                                              = 1;
        Kind_Tangle_f                                                               = 2;
      }
      Code.Line.Part.Data                          data                             = 1;
      string                                       debug                            = 1000;
    }
    repeated Code.Line.Part                        parts                            = 1;
    string                                         debug                            = 1000;
  }
  message Switch {
    message LineStart {
      int32                                        start                            = 1;
      bool                                         extendLast                       = 2;
      string                                       debug                            = 1000;
    }
    message CalloutFormat {
      string                                       format                           = 1;
      string                                       debug                            = 1000;
    }
    message RemoveCallout {
      bool                                         remove                           = 1;
      string                                       debug                            = 1000;
    }
    message EmphasizeLine {
      repeated int32                               line                             = 1;
      string                                       debug                            = 1000;
    }
    message Dedent {
      int32                                        value                            = 1;
      string                                       debug                            = 1000;
    }
    message Data {
      oneof kind {
        Code.Switch.LineStart                      linestart                        = 1;
        Code.Switch.CalloutFormat                  calloutformat                    = 2;
        Code.Switch.RemoveCallout                  removecallout                    = 3;
        Code.Switch.EmphasizeLine                  emphasizeline                    = 4;
        Code.Switch.Dedent                         dedent                           = 5;
      }
    }
    enum Kind {
      Kind_LineStart_f                                                              = 0;
      Kind_CalloutFormat_f                                                          = 1;
      Kind_RemoveCallout_f                                                          = 2;
      Kind_EmphasizeLine_f                                                          = 3;
      Kind_Dedent_f                                                                 = 4;
    }
    Code.Switch.Data                               data                             = 1;
    string                                         debug                            = 1000;
  }
  enum Results {
    Results_Replace_f                                                               = 0;
  }
  enum Exports {
    Exports_None_f                                                                  = 0;
    Exports_Both_f                                                                  = 1;
    Exports_Code_f                                                                  = 2;
    Exports_Results_f                                                               = 3;
  }
  optional CmdArguments                            parameters                       = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  optional string                                  lang                             = 5;
  repeated Code.Switch                             switches                         = 6;
  Code.Exports                                     exports                          = 7;
  repeated Code.Line                               lines                            = 8;
  bool                                             cache                            = 9;
  bool                                             eval                             = 10;
  bool                                             noweb                            = 11;
  bool                                             hlines                           = 12;
  bool                                             tangle                           = 13;
  string                                           debug                            = 1000;
}

message Time {
  message Repeat {
    enum Mode {
      Mode_None_f                                                                   = 0;
      Mode_Exact_f                                                                  = 1;
      Mode_FirstMatch_f                                                             = 2;
      Mode_SameDay_f                                                                = 3;
    }
    enum Period {
      Period_Year_f                                                                 = 0;
      Period_Month_f                                                                = 1;
      Period_Week_f                                                                 = 2;
      Period_Day_f                                                                  = 3;
      Period_Hour_f                                                                 = 4;
      Period_Minute_f                                                               = 5;
    }
    Time.Repeat.Mode                               mode                             = 1;
    Time.Repeat.Period                             period                           = 2;
    int32                                          count                            = 3;
    string                                         debug                            = 1000;
  }
  message Static {
    optional Time.Repeat                           repeat                           = 1;
    UserTime                                       time                             = 2;
    string                                         debug                            = 1000;
  }
  message Dynamic {
    string                                         expr                             = 1;
    string                                         debug                            = 1000;
  }
  message TimeVariant {
    oneof kind {
      Time.Static                                  static                           = 1;
      Time.Dynamic                                 dynamic                          = 2;
    }
  }
  enum TimeKind {
    TimeKind_Static_f                                                               = 0;
    TimeKind_Dynamic_f                                                              = 1;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  bool                                             isActive                         = 4;
  Time.TimeVariant                                 time                             = 5;
  string                                           debug                            = 1000;
}

message TimeRange {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  Time                                             from                             = 4;
  Time                                             to                               = 5;
  string                                           debug                            = 1000;
}

message Macro {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           name                             = 4;
  repeated string                                  arguments                        = 5;
  string                                           debug                            = 1000;
}

message Symbol {
  message Param {
    optional string                                key                              = 1;
    string                                         value                            = 2;
    string                                         debug                            = 1000;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           name                             = 4;
  repeated Symbol.Param                            parameters                       = 5;
  repeated AnyNode                                 positional                       = 6;
  string                                           debug                            = 1000;
}

message SubtreeLog {
  message DescribedLog {
    optional StmtList                              desc                             = 1;
    string                                         debug                            = 1000;
  }
  message Priority {
    enum Action {
      Action_Added_f                                                                = 0;
      Action_Removed_f                                                              = 1;
      Action_Changed_f                                                              = 2;
    }
    optional StmtList                              desc                             = 1;
    optional string                                oldPriority                      = 2;
    optional string                                newPriority                      = 3;
    Time                                           on                               = 4;
    string                                         debug                            = 1000;
  }
  message Note {
    optional StmtList                              desc                             = 1;
    Time                                           on                               = 2;
    string                                         debug                            = 1000;
  }
  message Refile {
    optional StmtList                              desc                             = 1;
    Time                                           on                               = 2;
    Link                                           from                             = 3;
    string                                         debug                            = 1000;
  }
  message Clock {
    optional StmtList                              desc                             = 1;
    oneof range_kind {
      Time                                         time                             = 2;
      TimeRange                                    timerange                        = 3;
    }
    string                                         debug                            = 1000;
  }
  message State {
    optional StmtList                              desc                             = 1;
    string                                         from                             = 2;
    string                                         to                               = 3;
    Time                                           on                               = 4;
    string                                         debug                            = 1000;
  }
  message Tag {
    optional StmtList                              desc                             = 1;
    Time                                           on                               = 2;
    HashTag                                        tag                              = 3;
    bool                                           added                            = 4;
    string                                         debug                            = 1000;
  }
  message LogEntry {
    oneof kind {
      SubtreeLog.Priority                          priority                         = 1;
      SubtreeLog.Note                              note                             = 2;
      SubtreeLog.Refile                            refile                           = 3;
      SubtreeLog.Clock                             clock                            = 4;
      SubtreeLog.State                             state                            = 5;
      SubtreeLog.Tag                               tag                              = 6;
    }
  }
  enum Kind {
    Kind_Priority_f                                                                 = 0;
    Kind_Note_f                                                                     = 1;
    Kind_Refile_f                                                                   = 2;
    Kind_Clock_f                                                                    = 3;
    Kind_State_f                                                                    = 4;
    Kind_Tag_f                                                                      = 5;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  SubtreeLog.LogEntry                              log                              = 4;
  string                                           debug                            = 1000;
}

message Subtree {
  message Period {
    enum Kind {
      Kind_Clocked_f                                                                = 0;
      Kind_Scheduled_f                                                              = 1;
      Kind_Titled_f                                                                 = 2;
      Kind_Deadline_f                                                               = 3;
      Kind_Created_f                                                                = 4;
      Kind_Repeated_f                                                               = 5;
    }
    Subtree.Period.Kind                            kind                             = 1;
    oneof period_kind {
      Time                                         time                             = 2;
      TimeRange                                    timerange                        = 3;
    }
    string                                         debug                            = 1000;
  }
  message Property {
    enum SetMode {
      SetMode_Override_f                                                            = 0;
      SetMode_Add_f                                                                 = 1;
      SetMode_Subtract_f                                                            = 2;
    }
    enum InheritanceMode {
      InheritanceMode_ThisAndSub_f                                                  = 0;
      InheritanceMode_OnlyThis_f                                                    = 1;
      InheritanceMode_OnlySub_f                                                     = 2;
    }
    message Nonblocking {
      bool                                         isBlocking                       = 1;
      string                                       debug                            = 1000;
    }
    message Trigger {
      string                                       debug                            = 1000;
    }
    message Origin {
      Paragraph                                    text                             = 1;
      string                                       debug                            = 1000;
    }
    message ExportLatexClass {
      string                                       latexClass                       = 1;
      string                                       debug                            = 1000;
    }
    message ExportLatexClassOptions {
      repeated string                              options                          = 1;
      string                                       debug                            = 1000;
    }
    message ExportLatexHeader {
      string                                       header                           = 1;
      string                                       debug                            = 1000;
    }
    message ExportLatexCompiler {
      string                                       compiler                         = 1;
      string                                       debug                            = 1000;
    }
    message Ordered {
      bool                                         isOrdered                        = 1;
      string                                       debug                            = 1000;
    }
    message Effort {
      int32                                        hours                            = 1;
      int32                                        minutes                          = 2;
      string                                       debug                            = 1000;
    }
    message Visibility {
      enum Level {
        Level_Folded_f                                                              = 0;
        Level_Children_f                                                            = 1;
        Level_Content_f                                                             = 2;
        Level_All_f                                                                 = 3;
      }
      Subtree.Property.Visibility.Level            level                            = 1;
      string                                       debug                            = 1000;
    }
    message ExportOptions {
      string                                       backend                          = 1;
      map<string, string>                          values                           = 2;
      string                                       debug                            = 1000;
    }
    message Blocker {
      repeated string                              blockers                         = 1;
      string                                       debug                            = 1000;
    }
    message Unnumbered {
      string                                       debug                            = 1000;
    }
    message Created {
      Time                                         time                             = 1;
      string                                       debug                            = 1000;
    }
    message Unknown {
      AnyNode                                      value                            = 1;
      string                                       name                             = 2;
      string                                       debug                            = 1000;
    }
    message Data {
      oneof kind {
        Subtree.Property.Nonblocking               nonblocking                      = 1;
        Subtree.Property.Trigger                   trigger                          = 2;
        Subtree.Property.Origin                    origin                           = 3;
        Subtree.Property.ExportLatexClass          exportlatexclass                 = 4;
        Subtree.Property.ExportLatexClassOptions   exportlatexclassoptions          = 5;
        Subtree.Property.ExportLatexHeader         exportlatexheader                = 6;
        Subtree.Property.ExportLatexCompiler       exportlatexcompiler              = 7;
        Subtree.Property.Ordered                   ordered                          = 8;
        Subtree.Property.Effort                    effort                           = 9;
        Subtree.Property.Visibility                visibility                       = 10;
        Subtree.Property.ExportOptions             exportoptions                    = 11;
        Subtree.Property.Blocker                   blocker                          = 12;
        Subtree.Property.Unnumbered                unnumbered                       = 13;
        Subtree.Property.Created                   created                          = 14;
        Subtree.Property.Unknown                   unknown                          = 15;
      }
    }
    enum Kind {
      Kind_Nonblocking_f                                                            = 0;
      Kind_Trigger_f                                                                = 1;
      Kind_Origin_f                                                                 = 2;
      Kind_ExportLatexClass_f                                                       = 3;
      Kind_ExportLatexClassOptions_f                                                = 4;
      Kind_ExportLatexHeader_f                                                      = 5;
      Kind_ExportLatexCompiler_f                                                    = 6;
      Kind_Ordered_f                                                                = 7;
      Kind_Effort_f                                                                 = 8;
      Kind_Visibility_f                                                             = 9;
      Kind_ExportOptions_f                                                          = 10;
      Kind_Blocker_f                                                                = 11;
      Kind_Unnumbered_f                                                             = 12;
      Kind_Created_f                                                                = 13;
      Kind_Unknown_f                                                                = 14;
    }
    Subtree.Property.SetMode                       mainSetRule                      = 1;
    Subtree.Property.SetMode                       subSetRule                       = 2;
    Subtree.Property.InheritanceMode               inheritanceMode                  = 3;
    Subtree.Property.Data                          data                             = 4;
    string                                         debug                            = 1000;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  int32                                            level                            = 4;
  optional string                                  treeId                           = 5;
  optional string                                  todo                             = 6;
  optional Completion                              completion                       = 7;
  optional Paragraph                               description                      = 8;
  repeated HashTag                                 tags                             = 9;
  Paragraph                                        title                            = 10;
  repeated SubtreeLog                              logbook                          = 11;
  repeated Subtree.Property                        properties                       = 12;
  optional Time                                    closed                           = 13;
  optional Time                                    deadline                         = 14;
  optional Time                                    scheduled                        = 15;
  string                                           debug                            = 1000;
}

message LatexBody {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message InlineMath {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Leaf {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           text                             = 2;
  string                                           debug                            = 1000;
}

message Escaped {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Newline {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Space {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Word {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message AtMention {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message RawText {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Punctuation {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Placeholder {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message BigIdent {
  string                                           text                             = 1;
  repeated AnyNode                                 subnodes                         = 2;
  optional LineCol                                 loc                              = 3;
  OrgSemKind                                       staticKind                       = 4;
  string                                           debug                            = 1000;
}

message Markup {
  repeated AnyNode                                 subnodes                         = 1;
  string                                           debug                            = 1000;
}

message Bold {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Underline {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Monospace {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message MarkQuote {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Verbatim {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Italic {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Strike {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Par {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message List {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message ListItem {
  enum Checkbox {
    Checkbox_None_f                                                                 = 0;
    Checkbox_Done_f                                                                 = 1;
    Checkbox_Empty_f                                                                = 2;
    Checkbox_Partial_f                                                              = 3;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  ListItem.Checkbox                                checkbox                         = 4;
  optional Paragraph                               header                           = 5;
  string                                           debug                            = 1000;
}

message Link {
  message Raw {
    string                                         text                             = 1;
    string                                         debug                            = 1000;
  }
  message Id {
    string                                         text                             = 1;
    string                                         debug                            = 1000;
  }
  message Person {
    string                                         name                             = 1;
    string                                         debug                            = 1000;
  }
  message UserProtocol {
    string                                         protocol                         = 1;
    string                                         target                           = 2;
    string                                         debug                            = 1000;
  }
  message Internal {
    string                                         target                           = 1;
    string                                         debug                            = 1000;
  }
  message Footnote {
    string                                         target                           = 1;
    string                                         debug                            = 1000;
  }
  message File {
    string                                         file                             = 1;
    string                                         debug                            = 1000;
  }
  message Data {
    oneof kind {
      Link.Raw                                     raw                              = 1;
      Link.Id                                      id                               = 2;
      Link.Person                                  person                           = 3;
      Link.UserProtocol                            userprotocol                     = 4;
      Link.Internal                                internal                         = 5;
      Link.Footnote                                footnote                         = 6;
      Link.File                                    file                             = 7;
    }
  }
  enum Kind {
    Kind_Raw_f                                                                      = 0;
    Kind_Id_f                                                                       = 1;
    Kind_Person_f                                                                   = 2;
    Kind_UserProtocol_f                                                             = 3;
    Kind_Internal_f                                                                 = 4;
    Kind_Footnote_f                                                                 = 5;
    Kind_File_f                                                                     = 6;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  optional Paragraph                               description                      = 4;
  Link.Data                                        data                             = 5;
  string                                           debug                            = 1000;
}

message DocumentOptions {
  message DoExport {
    bool                                           exportToc                        = 1;
    string                                         debug                            = 1000;
  }
  message ExportFixed {
    int32                                          exportLevels                     = 1;
    string                                         debug                            = 1000;
  }
  message TocExport {
    oneof kind {
      DocumentOptions.DoExport                     doexport                         = 1;
      DocumentOptions.ExportFixed                  exportfixed                      = 2;
    }
  }
  enum TocExportKind {
    TocExportKind_DoExport_f                                                        = 0;
    TocExportKind_ExportFixed_f                                                     = 1;
  }
  enum BrokenLinks {
    BrokenLinks_Raise_f                                                             = 0;
    BrokenLinks_Ignore_f                                                            = 1;
    BrokenLinks_Mark_f                                                              = 2;
  }
  enum Visibility {
    Visibility_Overview_f                                                           = 0;
    Visibility_Content_f                                                            = 1;
    Visibility_ShowAll_f                                                            = 2;
    Visibility_Show2Levels_f                                                        = 3;
    Visibility_Show3Levels_f                                                        = 4;
    Visibility_Show4Levels_f                                                        = 5;
    Visibility_Show5Levels_f                                                        = 6;
    Visibility_ShowEverything_f                                                     = 7;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  DocumentOptions.BrokenLinks                      brokenLinks                      = 4;
  DocumentOptions.Visibility                       initialVisibility                = 5;
  DocumentOptions.TocExport                        tocExport                        = 6;
  repeated Subtree.Property                        properties                       = 7;
  bool                                             smartQuotes                      = 8;
  bool                                             emphasizedText                   = 9;
  bool                                             specialStrings                   = 10;
  bool                                             fixedWidthSections               = 11;
  bool                                             includeTimestamps                = 12;
  bool                                             preserveLineBreaks               = 13;
  bool                                             plaintextSubscripts              = 14;
  bool                                             exportArchived                   = 15;
  bool                                             exportWithAuthor                 = 16;
  bool                                             exportBrokenLinks                = 17;
  bool                                             exportWithClock                  = 18;
  bool                                             exportWithCreator                = 19;
  DocumentOptions.TocExport                        data                             = 20;
  string                                           debug                            = 1000;
}

message Document {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  optional Paragraph                               title                            = 4;
  optional Paragraph                               author                           = 5;
  optional Paragraph                               creator                          = 6;
  repeated HashTag                                 filetags                         = 7;
  optional RawText                                 email                            = 8;
  repeated string                                  language                         = 9;
  DocumentOptions                                  options                          = 10;
  optional string                                  exportFileName                   = 11;
  string                                           debug                            = 1000;
}

message ParseError {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message FileTarget {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           path                             = 4;
  optional int32                                   line                             = 5;
  optional string                                  searchTarget                     = 6;
  bool                                             restrictToHeadlines              = 7;
  optional string                                  targetId                         = 8;
  optional string                                  regexp                           = 9;
  string                                           debug                            = 1000;
}

message TextSeparator {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message Include {
  message Example {
    string                                         debug                            = 1000;
  }
  message Export {
    string                                         debug                            = 1000;
  }
  message Src {
    string                                         debug                            = 1000;
  }
  message OrgDocument {
    string                                         debug                            = 1000;
  }
  message Data {
    oneof kind {
      Include.Example                              example                          = 1;
      Include.Export                               export                           = 2;
      Include.Src                                  src                              = 3;
      Include.OrgDocument                          orgdocument                      = 4;
    }
  }
  enum Kind {
    Kind_Example_f                                                                  = 0;
    Kind_Export_f                                                                   = 1;
    Kind_Src_f                                                                      = 2;
    Kind_OrgDocument_f                                                              = 3;
  }
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  Include.Data                                     data                             = 4;
  string                                           debug                            = 1000;
}

message DocumentGroup {
  repeated AnyNode                                 subnodes                         = 1;
  optional LineCol                                 loc                              = 2;
  OrgSemKind                                       staticKind                       = 3;
  string                                           debug                            = 1000;
}

message AnyNode {
  oneof kind {
    StmtList                                         stmtlist                         = 1;
    Empty                                            empty                            = 2;
    Cell                                             cell                             = 3;
    Row                                              row                              = 4;
    Table                                            table                            = 5;
    HashTag                                          hashtag                          = 6;
    Footnote                                         footnote                         = 7;
    Completion                                       completion                       = 8;
    Paragraph                                        paragraph                        = 9;
    AnnotatedParagraph                               annotatedparagraph               = 10;
    Center                                           center                           = 11;
    Caption                                          caption                          = 12;
    CmdName                                          cmdname                          = 13;
    CmdResults                                       cmdresults                       = 14;
    CommandGroup                                     commandgroup                     = 15;
    Tblfm                                            tblfm                            = 16;
    Quote                                            quote                            = 17;
    Verse                                            verse                            = 18;
    Example                                          example                          = 19;
    CmdArguments                                     cmdarguments                     = 20;
    CmdAttr                                          cmdattr                          = 21;
    CmdArgument                                      cmdargument                      = 22;
    Export                                           export                           = 23;
    AdmonitionBlock                                  admonitionblock                  = 24;
    Call                                             call                             = 25;
    Code                                             code                             = 26;
    Time                                             time                             = 27;
    TimeRange                                        timerange                        = 28;
    Macro                                            macro                            = 29;
    Symbol                                           symbol                           = 30;
    SubtreeLog                                       subtreelog                       = 31;
    Subtree                                          subtree                          = 32;
    InlineMath                                       inlinemath                       = 33;
    Escaped                                          escaped                          = 34;
    Newline                                          newline                          = 35;
    Space                                            space                            = 36;
    Word                                             word                             = 37;
    AtMention                                        atmention                        = 38;
    RawText                                          rawtext                          = 39;
    Punctuation                                      punctuation                      = 40;
    Placeholder                                      placeholder                      = 41;
    BigIdent                                         bigident                         = 42;
    Bold                                             bold                             = 43;
    Underline                                        underline                        = 44;
    Monospace                                        monospace                        = 45;
    MarkQuote                                        markquote                        = 46;
    Verbatim                                         verbatim                         = 47;
    Italic                                           italic                           = 48;
    Strike                                           strike                           = 49;
    Par                                              par                              = 50;
    List                                             list                             = 51;
    ListItem                                         listitem                         = 52;
    Link                                             link                             = 53;
    DocumentOptions                                  documentoptions                  = 54;
    Document                                         document                         = 55;
    ParseError                                       parseerror                       = 56;
    FileTarget                                       filetarget                       = 57;
    TextSeparator                                    textseparator                    = 58;
    Include                                          include                          = 59;
    DocumentGroup                                    documentgroup                    = 60;
  }
}
/* clang-format on */