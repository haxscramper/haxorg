[tool.poetry]
name = "testtest"
version = "0.1.0"
description = ""
authors = ["haxscramper <haxscramper@gmail.com>"]
readme = "README.org"

[tool.poetry.dependencies]
python = "^3.9.0 <3.14"
beartype = "^0.16.2"
rich = "^13.5.3"
betterproto = {extras = ["compiler"], version = "^1.2.5"}
pytest = "^8.2.2"
click = "^8.1.7"
rich-click = "^1.6.1"
toml = "^0.10.2"
click-config-file = "^0.6.0"
plumbum = "^1.8.2"
pydantic = "^2.4.2"
dominate = "^2.8.0"
pyyaml = "^6.0.1"
types-toml = "^0.10.8.7"
igraph = "^0.11.2"
graphviz = "^0.20.1"
deal = "^4.24.3"
pandas = "^2.1.3"
invoke = "^2.2.0"
more-itertools = "^10.1.0"
sqlalchemy = "^2.0.24"
hypothesis = "^6.92.2"
setuptools = "^69.0.3"
matplotlib = "^3.8.2"
compdb = "^0.2.0"
pytest-cov = "^4.1.0"
flask = "^3.0.2"
flask-cors = "^4.0.0"
jsonpath-ng = "^1.6.1"
pygments = "^2.17.2"
asteval = "^0.9.33"
mypy = "^1.11.0"
ansi2html = "^1.9.2"

[tool.poetry.group.local.dependencies]
py_textlayout = {path = "./scripts/py_textlayout", develop=true}
py_exporters = {path = "./scripts/py_exporters", develop=true}
py_haxorg = {path = "./scripts/py_haxorg", develop=true}
py_scriptutils = {path = "./scripts/py_scriptutils", develop=true}
py_codegen = {path = "./scripts/py_codegen", develop=true}
py_cli = {path = "./scripts/py_cli", develop=true}
py_repository = {path = "./scripts/py_repository", develop=true}
py_wrappers = {path = "./scripts/py_wrappers", develop=true}
cxx_repository = {path = "./scripts/cxx_repository", develop=true}

[tool.poetry.group.dev.dependencies]
yapf = "^0.40.2"
# on what to do instead, and I don't have time to deal with this bullshit, so fixing to whatever version 
# I have installed at the moment. 

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"] 
addopts = "--color=yes"
console_output_style = "classic"
markers = [
    "unstable: fuzzy tests that can randomly fail in CI",
    "x11: must be run in x11 environment to work",
    "bad_asan: code triggers sanitizer error", # External libraries cannot be fixed and trigger errors
    "test_coverage_annotation_file_cxx: C++ test coverage annotation extraction for a file",
    "test_gtest_class(name, params): C++ Google test class runner",
    "test_gtest_function(name, params): C++ Google test individual test instance",
    "test_gtest_tag(tag): Additional metadata tagging for the google test annotations",
    "test_gtest: C++ google test wrapped as pytest-runnable",
    "test_qtest: Qtest wrapped as pytest-runnable",
]

[tool.ruff]
ignore = [
  "F405", # Undefined or defined from `*` imports
  "F403", # `from astbuilder_cpp import *` used; unable to detect undefined names
  "E501", # Line length
  "F841", # Assigned but never used
  "F522", # UNused format arguments
  "F401", # Imported but not used -- just drives me crazy when I write code
]

[tool.yapf]
based_on_style = "google"
column_limit = 90
indent_width = 4
DISABLE_ENDING_COMMA_HEURISTIC = false

[tool.mypy]
exclude = "scripts/py_haxorg/py_haxorg/pyhaxorg.pyi"
# strict = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
